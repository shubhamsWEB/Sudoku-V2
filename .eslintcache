[{"/Users/geekyants/Documents/React/sudoku/src/index.js":"1","/Users/geekyants/Documents/React/sudoku/src/reportWebVitals.js":"2","/Users/geekyants/Documents/React/sudoku/src/router/index.js":"3","/Users/geekyants/Documents/React/sudoku/src/Containers/Board/index.js":"4","/Users/geekyants/Documents/React/sudoku/src/Containers/Login/index.js":"5","/Users/geekyants/Documents/React/sudoku/src/Containers/Home/index.js":"6","/Users/geekyants/Documents/React/sudoku/src/Containers/Signin/index.js":"7","/Users/geekyants/Documents/React/sudoku/src/Components/Home/index.js":"8","/Users/geekyants/Documents/React/sudoku/src/Components/Home/style.js":"9","/Users/geekyants/Documents/React/sudoku/src/Constants/homeConstants.js":"10","/Users/geekyants/Documents/React/sudoku/src/Components/RandomBoard/index.js":"11","/Users/geekyants/Documents/React/sudoku/src/utils/generateBoard.js":"12","/Users/geekyants/Documents/React/sudoku/src/Components/RandomBoard/style.js":"13","/Users/geekyants/Documents/React/sudoku/src/utils/generatePuzzle.js":"14","/Users/geekyants/Documents/React/sudoku/src/Components/ButtonGroup/index.js":"15","/Users/geekyants/Documents/React/sudoku/src/Components/ButtonGroup/style.js":"16","/Users/geekyants/Documents/React/sudoku/src/Components/StopWatch/index.js":"17","/Users/geekyants/Documents/React/sudoku/src/Components/StopWatch/style.js":"18","/Users/geekyants/Documents/React/sudoku/src/Containers/Dashboard/index.js":"19","/Users/geekyants/Documents/React/sudoku/src/Containers/Dashboard/style.js":"20"},{"size":509,"mtime":1608658222946,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1608658200538,"results":"23","hashOfConfig":"22"},{"size":706,"mtime":1609781817436,"results":"24","hashOfConfig":"22"},{"size":2129,"mtime":1610599815000,"results":"25","hashOfConfig":"22"},{"size":161,"mtime":1608658365818,"results":"26","hashOfConfig":"22"},{"size":204,"mtime":1608699901227,"results":"27","hashOfConfig":"22"},{"size":165,"mtime":1608658375800,"results":"28","hashOfConfig":"22"},{"size":1461,"mtime":1609778570985,"results":"29","hashOfConfig":"22"},{"size":535,"mtime":1609071652121,"results":"30","hashOfConfig":"22"},{"size":66,"mtime":1608701864379,"results":"31","hashOfConfig":"22"},{"size":4572,"mtime":1609781960352,"results":"32","hashOfConfig":"22"},{"size":4698,"mtime":1609004875828,"results":"33","hashOfConfig":"22"},{"size":1434,"mtime":1609132040880,"results":"34","hashOfConfig":"22"},{"size":410,"mtime":1609782146317,"results":"35","hashOfConfig":"22"},{"size":1003,"mtime":1609090872499,"results":"36","hashOfConfig":"22"},{"size":853,"mtime":1609092154865,"results":"37","hashOfConfig":"22"},{"size":661,"mtime":1609778425184,"results":"38","hashOfConfig":"22"},{"size":417,"mtime":1609778422168,"results":"39","hashOfConfig":"22"},{"size":2333,"mtime":1609781793267,"results":"40","hashOfConfig":"22"},{"size":466,"mtime":1609781716817,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"16lr0sb",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/Users/geekyants/Documents/React/sudoku/src/index.js",[],["89","90"],"/Users/geekyants/Documents/React/sudoku/src/reportWebVitals.js",[],"/Users/geekyants/Documents/React/sudoku/src/router/index.js",[],"/Users/geekyants/Documents/React/sudoku/src/Containers/Board/index.js",["91"],"import React from \"react\";\nimport RandomBoard from \"../../Components/RandomBoard\";\nimport { suduko } from \"../../utils/generateBoard\";\nimport { Puzzle } from \"../../utils/generatePuzzle\";\nimport { useStopwatch } from \"react-timer-hook\";\nconst Board = (props) => {\n  const [board, setBoard] = React.useState();\n  const [puzzle, setPuzzle] = React.useState();\n  const [inputNum, setInputNum] = React.useState(0);\n  const [activeIndex, setActiveIndex] = React.useState({ row: \"\", col: \"\" });\n  const [prevIndex,setPrevIndex] = React.useState({row:\"\",col:''});\n\n  const {\n    seconds,\n    minutes,\n    hours,\n    days,\n    isRunning,\n    start,\n    pause,\n    reset,\n  } = useStopwatch({ autoStart: true });\n\n\n  const handleButtonValueChange = (e,val) => {\n    if(activeIndex.row !==\"\" && activeIndex.col!==\"\") {\n    setInputNum(val);\n    puzzle.newPuzzle[activeIndex.row][activeIndex.col].value = val;\n    setPuzzle(puzzle)\n    setInputNum(0);\n    setPrevIndex({...activeIndex});\n    setActiveIndex({ row: \"\", col: \"\" });\n    } else {\n      alert(\"Select Cell First\")\n    }\n  };\nconst undo = () => {\n  puzzle.newPuzzle[prevIndex.row][prevIndex.col].value = 0;\n    setPuzzle(puzzle);\n}\n  React.useEffect(() => {\n    const solution = suduko();\n    setBoard(solution);\n  }, []);\n\n  React.useEffect(() => {\n    if (board) {\n      const gamePuzzle = Puzzle(board,props.match.params.level);\n      setPuzzle(gamePuzzle);\n    }\n  }, [board]);\n\n  const handelOnEdit = (num, r, c) => {\n    setActiveIndex({ row: r, col: c });\n  };\n\n  if (puzzle) {\n    return (\n      <RandomBoard\n        board={puzzle.board}\n        puzzle={puzzle.newPuzzle}\n        activeIndex={activeIndex}\n        setActiveIndex={setActiveIndex}\n        seconds = {seconds}\n        minutes={minutes}\n        hours={hours}\n        days={days}\n        isRunning={isRunning}\n        start={start}\n        pause={pause}\n        reset={reset}\n        handelOnEdit={handelOnEdit}\n        handleButtonValueChange={handleButtonValueChange}\n        inputNum={inputNum}\n        OnUndo={undo}\n      />\n    );\n  } else {\n    return <h1>Loading...</h1>;\n  }\n};\n\nexport default Board;\n","/Users/geekyants/Documents/React/sudoku/src/Containers/Login/index.js",[],"/Users/geekyants/Documents/React/sudoku/src/Containers/Home/index.js",[],"/Users/geekyants/Documents/React/sudoku/src/Containers/Signin/index.js",[],"/Users/geekyants/Documents/React/sudoku/src/Components/Home/index.js",["92"],"import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport SudokuGif from \"../../Assets/images/sudoku.gif\";\nimport { APP_NAME, APP_VERSION } from \"../../Constants/homeConstants\";\nimport Button from \"@material-ui/core/Button\";\nimport {Link} from 'react-router-dom';\nimport useStyles from \"./style\";\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nfunction Index() {\n  const classes = useStyles();\n  return (\n    <div className={classes.shadow3}>\n      <CssBaseline />\n      <Container align=\"center\">\n        <img src={SudokuGif} />\n        <Typography variant=\"h3\" component=\"h1\" className={classes.appName}>\n          {APP_NAME} <span style={{ color: \"#16db08\" }}>{APP_VERSION}</span>\n        </Typography>\n        <Container className={classes.marginTop}>\n          <Link to='/dashboard' style={{textDecoration: 'none'}}>\n        <Button size=\"large\" variant=\"contained\" color=\"primary\" startIcon={<PlayCircleOutlineIcon/>} className={classes.playButtons}>\n          Play\n        </Button>\n        </Link>\n        <Button size=\"large\" variant=\"contained\" color=\"secondary\" startIcon={<CalendarTodayIcon />}>\n          Challenge\n        </Button>\n        </Container>\n      </Container>\n    </div>\n  );\n}\n\nexport default Index;\n","/Users/geekyants/Documents/React/sudoku/src/Components/Home/style.js",[],"/Users/geekyants/Documents/React/sudoku/src/Constants/homeConstants.js",[],"/Users/geekyants/Documents/React/sudoku/src/Components/RandomBoard/index.js",[],"/Users/geekyants/Documents/React/sudoku/src/utils/generateBoard.js",["93","94","95"],"import { queryAllByRole } from \"@testing-library/react\";\n\nexport const suduko = () =>  {\n    var i, q, opt, row, spot, weak, current, tmp, badFlag;\n\n\n    var scramble = function (arr) { //returns array in scrambled order\n        var i, len, obj, sorter, rnd, res;\n        obj = {};\n        sorter = [];\n        res = [];\n        len = arr.length;\n        i = 0;\n        while (i < len) {\n            rnd = Math.random() + \"\";\n            if (obj[rnd]) {\n                continue;\n            }\n            obj[rnd] = arr[i];\n            i++;\n            sorter.push(rnd);\n        }\n        sorter = sorter.sort();\n\n        for (i = 0; i < len; i++) {\n            res.push(obj[sorter[i]]);\n        }\n\n        return res;\n    }\n\n    //=================================\n\n\n    var join = function (a1, a2) { //joins two arrays but strains out duplicate values\n        var arr, i, len, v;\n        arr = a1.concat(a2);\n        len = arr.length;\n        for (i = 0; i < len; i++) {\n            v = arr.shift();\n            if (arr.indexOf(v) !== -1) {\n                continue;\n            }\n            arr.push(v);\n        }\n        return arr;\n    }\n\n    var getColumn = function (off) { //gets all values in the specified column\n        var i, arr, v;\n        arr = [];\n        for (i = 0; i < 9; i++) {\n            v = q[i][off];\n            if (v !== 0) {\n                arr.push(v);\n            }\n        }\n        return arr;\n    }\n\n    var getRow = function (off) {//gets all values in a row\n        var i, arr, v;\n        arr = [];\n        for (i = 0; i < 9; i++) {\n            v = q[off][i];\n            if (v !== 0) {\n                arr.push(v);\n            }\n        }\n        return arr;\n    }\n\n    var invert = function (arr) { //gives all values that are NOT in the argument array\n        var i, res, b = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n        b = scramble(b);\n        res = [];\n        for (i = 0; i < 9; i++) {\n            if (arr.indexOf(b[i]) === -1) {\n                res.push(b[i]);\n            }\n        }\n        return res;\n    }\n\n    var getGrid = function (col, row) { //gives all the current values in the 3X3 box to which it belongs\n        var res, i, j, v,jmp;\n        jmp = [0, 3, 6, 9];\n        res = [];\n        col = Math.floor(col / 3);\n        col = jmp[col];\n        row = Math.floor(row / 3);\n        row = jmp[row];\n\n        for (i = row; i < (row + 3); i++) {\n            for (j = col; j < (col + 3); j++) {\n                v = q[i][j];\n                if (res.indexOf(v) === -1 && v !== 0) {\n                    res.push(v);\n                }\n            }\n        }\n        return res;\n    }\n\n    var getSet = function (c, r) {  //get all current possible valid options for the position\n        var a, b, c;\n        a = getGrid(c, r);\n        b = getRow(r);\n        c = getColumn(c);\n        a = join(a, b);\n        a = join(a, c);\n        a = invert(a);\n        return a;\n    }\n\n    var init = function () { //build the 2D array and set all values to zero\n        var i, j;\n        q = [];\n        for (i = 0; i < 9; i++) {\n            q[i] = [];\n            for (j = 0; j < 9; j++) {\n                q[i][j] = 0;\n            }\n        }\n\n    }\n    //======== loop until the heuristic provides a valid puzzle\n    do {\n        init();\n        opt = scramble([1, 2, 3, 4, 5, 6, 7, 8, 9]);\n        for (i = 0; i < 9; i++) {\n            q[0][i] = opt[i];\n        }\n        opt = opt.slice(3, 9);\n        opt = scramble(opt);\n\n        for (i = 0; i < 3; i++) {\n            q[1][i] = opt[i];\n            q[2][i] = opt[(i + 3)];\n        }\n\n        badFlag = false;\n\n        for (row = 1; row < 9; row++) {\n            while (true) {\n                tmp = getRow(row);\n                if (tmp.length === 9) {\n                    break;\n                }\n                weak = 10;\n                for (i = 0; i < 9; i++) {\n                    if (q[row][i] !== 0) {\n                        continue;\n                    }\n                    tmp = getSet(i, row);\n                    if (tmp.length < weak) {\n                        weak = tmp.length;\n                        spot = i;\n                    }\n                }\n                current = getSet(spot, row);\n                if (current.length === 0) {  //heuristic failed--try again\n                    badFlag = true;\n                    break;\n                }\n                tmp = current.pop();\n                q[row][spot] = tmp;\n            }\n\n            if (badFlag) {\n                break;\n            }\n\n        } //end of row\n    } while (badFlag);\n    q.map((row) => {\n        for(var sh=0;sh<9;sh++) {\n            row[sh] = {value: row[sh],isPrefilled: true}\n        }\n    })\n\n  return q;\n}","/Users/geekyants/Documents/React/sudoku/src/Components/RandomBoard/style.js",[],"/Users/geekyants/Documents/React/sudoku/src/utils/generatePuzzle.js",["96"],"import _ from \"lodash\";\nexport const Puzzle = (board, level) => {\n  let difficulty = level === \"easy\" ? 4 : level === \"medium\" ? 6 : 7;\n  var newPuzzle = _.cloneDeep(board);\n  newPuzzle.map((row) => {\n    for (var i = 0; i < difficulty; i++) {\n      const random = Math.floor(Math.random() * 9);\n      row[random].value = 0;\n      row[random].isPrefilled = false;\n    }\n  });\n  return { newPuzzle, board };\n};\n","/Users/geekyants/Documents/React/sudoku/src/Components/ButtonGroup/index.js",[],"/Users/geekyants/Documents/React/sudoku/src/Components/ButtonGroup/style.js",[],"/Users/geekyants/Documents/React/sudoku/src/Components/StopWatch/index.js",[],"/Users/geekyants/Documents/React/sudoku/src/Components/StopWatch/style.js",[],["97","98"],"/Users/geekyants/Documents/React/sudoku/src/Containers/Dashboard/index.js",["99","100","101"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport useStyles from \"./style\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Container } from \"@material-ui/core\";\nimport StarIcon from \"@material-ui/icons/Star\";\nimport { Link } from \"react-router-dom\";\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\n\nexport default function Dashboard() {\n  const classes = useStyles();\n\n  return (\n    <Container>\n      <Typography\n        variant=\"h3\"\n        component=\"h3\"\n        align=\"center\"\n        color=\"primary\"\n        className={classes.heading}\n      >\n        DIFFICULTY\n      </Typography>\n      <Grid container spacing={3}>\n        {[{level: 'EASY',path:'/board/easy',icon: '★'},{level: 'MEDIUM',path:'/board/medium',icon: '★★'}, {level: 'HARD',path:'/board/hard',icon: '★★★'}].map((row) => {\n          return (\n            <Grid item xs={12} sm={6} lg={4}>\n              <Card className={classes.root}>\n                <CardContent>\n                  <Typography\n                    className={classes.title}\n                    color=\"textSecondary\"\n                    gutterBottom\n                    align=\"center\"\n                  >\n                    <span style={{fontSize: '40px',color: \"#d4af36\"}}>{row.icon}</span>\n                  </Typography>\n                  <Typography\n                    variant=\"h5\"\n                    align=\"center\"\n                    component=\"h5\"\n                    color=\"textSecondary\"\n                  >\n                   {row.level}\n                  </Typography>\n                  <center>\n                  <Link to={row.path} style={{textDecoration: 'none'}}>\n                    <Button startIcon={<PlayCircleOutlineIcon/>} variant=\"outlined\" color=\"primary\" style={{marginTop: '15px'}}>\n                      Play\n                    </Button>\n                  </Link>\n                  </center>\n                </CardContent>\n              </Card>\n            </Grid>\n          );\n        })}\n      </Grid>\n    </Container>\n  );\n}\n","/Users/geekyants/Documents/React/sudoku/src/Containers/Dashboard/style.js",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":51,"column":6,"nodeType":"108","endLine":51,"endColumn":13,"suggestions":"109"},{"ruleId":"110","severity":1,"message":"111","line":18,"column":9,"nodeType":"112","endLine":18,"endColumn":32},{"ruleId":"113","severity":1,"message":"114","line":1,"column":10,"nodeType":"115","messageId":"116","endLine":1,"endColumn":24},{"ruleId":"117","severity":1,"message":"118","line":106,"column":19,"nodeType":"115","messageId":"119","endLine":106,"endColumn":20},{"ruleId":"120","severity":1,"message":"121","line":176,"column":17,"nodeType":"122","messageId":"123","endLine":176,"endColumn":19},{"ruleId":"120","severity":1,"message":"121","line":5,"column":23,"nodeType":"122","messageId":"123","endLine":5,"endColumn":25},{"ruleId":"102","replacedBy":"124"},{"ruleId":"104","replacedBy":"125"},{"ruleId":"113","severity":1,"message":"126","line":2,"column":10,"nodeType":"115","messageId":"116","endLine":2,"endColumn":20},{"ruleId":"113","severity":1,"message":"127","line":4,"column":8,"nodeType":"115","messageId":"116","endLine":4,"endColumn":19},{"ruleId":"113","severity":1,"message":"128","line":11,"column":8,"nodeType":"115","messageId":"116","endLine":11,"endColumn":16},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'props.match.params.level'. Either include it or remove the dependency array.","ArrayExpression",["131"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'queryAllByRole' is defined but never used.","Identifier","unusedVar","no-redeclare","'c' is already defined.","redeclared","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["129"],["130"],"'makeStyles' is defined but never used.","'CardActions' is defined but never used.","'StarIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"132","fix":"133"},"Update the dependencies array to be: [board, props.match.params.level]",{"range":"134","text":"135"},[1422,1429],"[board, props.match.params.level]"]